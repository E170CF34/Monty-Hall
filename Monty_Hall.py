import random

def prize():
    '''
    Функция формирует три двери в виде листа: 0 - за дверью коза, 1 - за дверью автомобиль
    Значения формируются рандомно
    '''
    doors = [0] * 3
    doors[random.randrange(3)] = 1
    return doors

print(prize())

def monty_hall():
    my_choice_rate = 0
    alt_choice = 0
    n = 10000
    for i in range(n):
        d = prize() # создаём двери для раунда игры
        indexes = [0, 1, 2] # номера дверей
        my_choice = random.randrange(3) # случайный номер двери, которую игрок выбирает в начале игры
        random_num_door = random.randrange(3) # случайно выбираем номер двери, которую открывает ведущий
        while d[random_num_door] != 0 or random_num_door == my_choice: # Пока 1. За дверью, которую выбрал ведущий
            # ЕСТЬ авто, ЛИБО 2. Номер двери ведущего совпадает с номером двери, которую выбрал игрок.
            # Продолжаем подбирать номер двери, которую может выбрать ведущий.
            random_num_door = random.randrange(3) # Номер двери, которую выбрал ведущий и открыл её.(За дверью нет авто,
            # номер двери отличен от номера двери, которую выбрал игрок)
        indexes.remove(my_choice) # исключаем номер двери, которую выбрал игрок
        indexes.remove(random_num_door) # исключаем номер двери, которую выбрал ведущий
        # В списке indexes остался номер двери, которую не выбрал ни игрок ни ведущий. Это номер двери, которую
        # может выбрать игрок вместо номера выбранного в начале игры
        if d[my_choice] == 1:
            my_choice_rate += 1 # считаем кол-во случаев, когда за дверью, которую выбрал игрок в начале игры есть авто
        if d[indexes[0]] == 1:
            alt_choice += 1 # считаем кол-во случаев, когда игрок изменил номер двери и за ней оказалось авто

    print(f'Вероятность выиграть авто не меняя дверь - {my_choice_rate/n*100}%, '
          f' Вероятность выиграть авто если поменять дверь - {alt_choice/n*100}%') # подсчитываем процент случаев, когда за дверью
    # оказалось авто


def check_random(n=100000):
    '''
    Функция для проверки функции prize().
    Убедился, что значения формируются с одинаковой вероятностью,
    :param n: количество проверок (точность проверки)
    '''
    first = 0
    second = 0
    third = 0
    for i in range(n):
        if prize()[0] == 1:
            first += 1
        if prize()[1] == 1:
            second += 1
        if prize()[2] == 1:
            third += 1
    first = first/n * 100
    second = second/n * 100
    third = third/n * 100
    print(f' first {first}%, second {second}%, third {third}%')

print(check_random())

print(monty_hall())




